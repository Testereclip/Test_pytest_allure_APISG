{"name": "Validar geocoder para 'AUTOPISTA PERITO MORENO Y AUTOPISTA 25 DE MAYO'", "status": "failed", "statusDetails": {"message": "AssertionError: Error HTTP para AUTOPISTA PERITO MORENO Y AUTOPISTA 25 DE MAYO\nassert 404 == 200\n +  where 404 = <Response [404]>.status_code", "trace": "caso = {'archivo': 'direccion_total_cruces.json', 'direccion': 'AUTOPISTA PERITO MORENO Y AUTOPISTA 25 DE MAYO', 'metodo_geocodificacion': 'Interseccion entre Calles', 'nombreCalle_1': 'AUTOPISTA PERITO MORENO', ...}\n\n    @pytest.mark.parametrize(\"caso\", cargar_casos())\n    @allure.epic(\"Validaciones de geocoder\")\n    @allure.feature(\"Geocoder con cruces totales\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @allure.description(\"\"\"\n    Validación del endpoint **/geocoder** verificando que los atributos\n    `direccion`, `nombreCalle_1`, `nombreCalle_2`, `metodo_geocodificacion` y `tipoDireccion`\n    coincidan con lo definido en el archivo JSON.\n    \"\"\")\n    def test_datos_geocoder_con_atributos(caso):\n        direccion = caso[\"direccion\"]\n    \n        allure.dynamic.title(f\"Validar geocoder para '{direccion}'\")\n        allure.dynamic.parameter(\"Dirección\", direccion)\n        allure.dynamic.parameter(\"Archivo origen\", caso[\"archivo\"])\n    \n        with allure.step(\"Ejecutar request al endpoint\"):\n            response = requests.get(\n                ENDPOINTS[\"geocoder\"],\n                params={\"direccion\": direccion, \"v2\": \"true\"}\n            )\n            allure.attach(response.url, name=\"🔗 Request URL\", attachment_type=allure.attachment_type.TEXT)\n            allure.attach(response.text, name=\"📦 Response JSON\", attachment_type=allure.attachment_type.JSON)\n    \n        with allure.step(\"Verificar status code 200\"):\n>           assert response.status_code == 200, f\"Error HTTP para {direccion}\"\nE           AssertionError: Error HTTP para AUTOPISTA PERITO MORENO Y AUTOPISTA 25 DE MAYO\nE           assert 404 == 200\nE            +  where 404 = <Response [404]>.status_code\n\ntests_v2.0.3\\geocoder\\test_cruces_total.py:54: AssertionError"}, "description": "\nValidación del endpoint **/geocoder** verificando que los atributos\n`direccion`, `nombreCalle_1`, `nombreCalle_2`, `metodo_geocodificacion` y `tipoDireccion`\ncoincidan con lo definido en el archivo JSON.\n", "steps": [{"name": "Ejecutar request al endpoint", "status": "passed", "attachments": [{"name": "🔗 Request URL", "source": "dd4b00bc-a129-4b00-ad04-6c91a875cb6b-attachment.txt", "type": "text/plain"}, {"name": "📦 Response JSON", "source": "a852a767-ae21-4aa0-9c80-00e128cd2e02-attachment.json", "type": "application/json"}], "start": 1758719879763, "stop": 1758719880081}, {"name": "Verificar status code 200", "status": "failed", "statusDetails": {"message": "AssertionError: Error HTTP para AUTOPISTA PERITO MORENO Y AUTOPISTA 25 DE MAYO\nassert 404 == 200\n +  where 404 = <Response [404]>.status_code\n", "trace": "  File \"C:\\Users\\27960443689\\Desktop\\backup\\API_SERVICIO_GEO\\PY_TEST_APISG\\tests_v2.0.3\\geocoder\\test_cruces_total.py\", line 54, in test_datos_geocoder_con_atributos\n    assert response.status_code == 200, f\"Error HTTP para {direccion}\"\n"}, "start": 1758719880081, "stop": 1758719880081}], "parameters": [{"name": "caso", "value": "{'direccion': 'AUTOPISTA PERITO MORENO Y AUTOPISTA 25 DE MAYO', 'nombreCalle_1': 'AUTOPISTA PERITO MORENO', 'nombreCalle_2': 'AUTOPISTA 25 DE MAYO', 'metodo_geocodificacion': 'Interseccion entre Calles', 'tipoDireccion': 'calle_calle', 'archivo': 'direccion_total_cruces.json'}"}, {"name": "Dirección", "value": "'AUTOPISTA PERITO MORENO Y AUTOPISTA 25 DE MAYO'"}, {"name": "Archivo origen", "value": "'direccion_total_cruces.json'"}], "start": 1758719879763, "stop": 1758719880082, "uuid": "55b75fdd-928c-4769-916e-7cebe39c36e9", "historyId": "ad7b12adffaa98b9b6fb3f514a84db8c", "testCaseId": "619eca6dbb133aa78bebb5ab7e1ce151", "fullName": "tests_v2.0.3.geocoder.test_cruces_total#test_datos_geocoder_con_atributos", "labels": [{"name": "epic", "value": "Validaciones de geocoder"}, {"name": "feature", "value": "Geocoder con cruces totales"}, {"name": "severity", "value": "normal"}, {"name": "parentSuite", "value": "tests_v2.0.3.geocoder"}, {"name": "suite", "value": "test_cruces_total"}, {"name": "host", "value": "SECITD-P197C6K"}, {"name": "thread", "value": "9416-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests_v2.0.3.geocoder.test_cruces_total"}]}